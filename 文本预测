任务目标：监督任务，输入文本某一段内容，输出该内容之后的内容。
对于一段文本，“忘却成都来十载”，输入“忘却成都来”，输出“十载”。

首先应该清楚，模型的输入层、隐藏层与输出层的维度关系：
输入层：[seq_len, batch_size, inut_size]       # seq_len——序列长度，对应该任务为有几句话作为输入    
隐藏层：[num_layers, batch_size, hidden_size]  # num_layers——堆叠几层RNN、batch_size——一句话有几个字或者是一句话分成几个批次
输出层：[seq_len, batch_size, hidden_size]     # hidden_size 隐层节点个数、input_size——每个字使用多少特征表示，也就是一个向量中的列数

实现方法：
	（1）使用jiebe分词，对原始输入进行分词操作。分词之后的内容为 “忘却”、“成都”、“来”、“十载”。 
	构造字典为：{'忘却': 0, '成都': 1, '来': 2, '十载': 3}
	def make_batch():
	首先构造输入张量，输入张量维度为[3,4]，即三行四列的矩阵。
	每一行分别表示 “忘却”、“成都”、“来” 这几个词，每一个词使用四个特征来表示，也就是四列。为什么使用四列？因为字典长度为4，最终通过连接一个全连接网
	络，模型输出具有四个特征的张量，每一个特征上的数值大小对应为该时刻输出为该位置特征的概率大小。比如，如果第四个数最大，那么模型输出就是字典中第四
	个字。输入张量构造完之后，还需要目标张量，使用目标张量与模型输出计算损失，通过反向传播，更新梯度优化方向，以减小损失，优化表现效果。目标张量构造
	为[3]。“十载”就是目标张量所表示的字符，该字符在字典中索引为3.
	
	
